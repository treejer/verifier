name: Google Cloud Run Deploy
# https://github.com/google-github-actions/setup-gcloud
on:
  push:
    branches:
      - gcpize

env:
  PROJECT_ID: ${{ secrets.GCR_PROJECT }}
  RUN_REGION: europe-west3
  SERVICE_NAME: verifier

jobs:
  build:
    name: Build Verifier App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js (NPM)
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Use cached node_modules
        uses: actions/cache@master
        with:
          path: node_modules
          key: nodeModules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            nodeModules-
      - name: Install dependencies
        run: npm install --force
        env:
          CI: true

      - name: create env file
        run: |
            touch .env
            echo "ENGINE_API_KEY=${{ secrets.ENGINE_API_KEY }}
            PORT=${{ secrets.PORT }}
            CHOKIDAR_USEPOLLING=${{ secrets.CHOKIDAR_USEPOLLING }}
            REACT_APP_WALLET_CONNECT_PROJECT_ID='${{ secrets.REACT_APP_WALLET_CONNECT_PROJECT_ID }}'
            REACT_APP_ALCHEMY_ID='${{ secrets.REACT_APP_ALCHEMY_ID }}'
            REACT_APP_DEFAULT_CHAIN_ID=${{ secrets.REACT_APP_DEFAULT_CHAIN_ID }}
            REACT_APP_DEFAULT_BASE_URL='${{ secrets.REACT_APP_DEFAULT_BASE_URL }}'
            REACT_APP_MAIN_MATIC_BASE_URL='${{ secrets.REACT_APP_MAIN_MATIC_BASE_URL }}'
            REACT_APP_TEST_MATIC_BASE_URL='${{ secrets.REACT_APP_TEST_MATIC_BASE_URL }}'
            REACT_APP_MAIN_ETHERIUM_BASE_URL='${{ secrets.REACT_APP_MAIN_ETHERIUM_BASE_URL }}' " >> .env    

      - name: Build Development
        run: npm run build
        env:
          CI: true  

      - name: Archive Production Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build

  deploy-gcr:
    name: Deploy to GCR
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@main

      - name: Download Artifact
        uses: actions/download-artifact@main
        with:
          name: build
          path: build

      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GCR_SA_KEY }}'
          project_id: '${{ secrets.GCR_PROJECT }}'
    
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      # Build and push image to Google Container Registry
      # - name: Build & Push
      #   run: |-
      #     gcloud builds submit \
      #       --quiet \
      #       --tag "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA" \
      #       --file "./Dockerfile"
      #   working-directory: build
      # - name: Building and pushing the image
      #   uses: ./
      #   with:
      #     registry: gcr.io
      #     project_id: $PROJECT_ID
      #     image_name: $SERVICE_NAME
      #     image_tag: $SERVICE_NAME-$GITHUB_SHA, $SERVICE_NAME, $GITHUB_SHA
      #     dockerfile: ./Dockerfile
      #     context: ./build
      #     target: build

      - name: 'Docker build'
        run: 'docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA .'

      - name: 'Gcloud auth configure-docker'
        run: 'gcloud auth configure-docker'

      - name: 'Docker push to GCR'
        run: 'docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA'

      # - uses: RafikFarhad/push-to-gcr-github-action@v5-beta
      #   with:
      #     registry: gcr.io
      #     project_id: "$PROJECT_ID"
      #     image_name: verifier
      #     image_tag: "$SERVICE_NAME-$GITHUB_SHA, $SERVICE_NAME, $GITHUB_SHA"
      #     dockerfile: ./Dockerfile    


      # Deploy image to Cloud Run
      # - name: Deploy GCR
      #   run: |-
      #     gcloud run deploy "$SERVICE_NAME" \
      #       --quiet \
      #       --region "$RUN_REGION" \
      #       --image "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA" \
      #       --platform "managed" \
      #       --allow-unauthenticated
       
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.RUN_REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: "gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}"
          # NOTE: You can also set env variables here:
          #  env_vars: |
          #  NODE_ENV=production
          #  TOKEN_EXPIRE=6400

            
